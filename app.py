import streamlit as st
import pandas as pd
from sklearn.linear_model import LinearRegression
import numpy as np

# Configura√ß√£o do Streamlit
st.set_page_config(layout="centered")
st.title("Previsor de Pre√ßo de Lanches üçî")
st.subheader("Modelo de Regress√£o Linear")
st.divider()

# Carregar o arquivo j√° codificado
try:
    # Acessa o arquivo lanches.csv mais atualizado
    df = pd.read_csv("lanches.csv")
except FileNotFoundError:
    st.error("Erro: O arquivo 'lanches.csv' n√£o foi encontrado.")
    st.stop()

# Garantir que as colunas s√£o limpas e convertidas para min√∫sculas.
df.columns = df.columns.str.strip().str.lower()

# ----------------------------------------------------
# NOVO TREINAMENTO DO MODELO (FOR√áANDO PROPORCIONALIDADE)
# ----------------------------------------------------

# 1. Identificar colunas de sabor (One-Hot Encoded)
colunas_sabor = [col for col in df.columns if col not in ['comprimento', 'pre√ßo']]

# 2. Engenharia de Features: Criar termos de intera√ß√£o (Sabor * Comprimento)
# Este √© o segredo para for√ßar o pre√ßo a ser uma fun√ß√£o direta do comprimento.
for col in colunas_sabor:
    # CORRE√á√ÉO: Padronizar o nome da coluna de intera√ß√£o substituindo espa√ßos por underscores.
    col_feature_name = col.replace(' ', '_')
    df[f'{col_feature_name}_comp'] = df[col] * df['comprimento']

# 3. Separar vari√°veis independentes (x) e dependente (y)
# X agora cont√©m APENAS as colunas de intera√ß√£o (Sabor * Comprimento).
x = df.filter(like='_comp') 
y = df["pre√ßo"]

# 4. Treinar o modelo FOR√áANDO fit_intercept=False
# Isso for√ßa o pre√ßo a ser 0 quando o comprimento for 0 (perfeita proporcionalidade).
try:
    # fit_intercept=False garante que o modelo aprende a propor√ß√£o.
    modelo = LinearRegression(fit_intercept=False)
    modelo.fit(x, y)
    
    # st.success("Modelo retreinado com sucesso com a nova estrutura de features!") # Mensagem de sucesso opcional
    
except Exception as e:
    st.error(f"Erro ao treinar o modelo: {e}")
    st.stop()


# ----------------------------------------------------
# L√ìGICA DE PREVIS√ÉO
# ----------------------------------------------------

# Preparar as op√ß√µes de lanche para a UI
opcoes_ui = [sabor.title() for sabor in colunas_sabor]

# Selecionar o tipo de lanche
tipo_lanche_ui = st.selectbox("Escolha o tipo de lanche:", opcoes_ui)
# min_value alterado para inteiro (1) e step para 5 (inteiro) para evitar o warning de formata√ß√£o.
tamanho = st.number_input("Tamanho do lanche (cm):", min_value=1, step=5, format="%d")

if st.button("Prever Pre√ßo"):
    if tamanho > 0:
        # 1. Obter o nome da coluna de sabor no formato que o modelo espera (min√∫sculas).
        coluna_sabor_min = tipo_lanche_ui.lower()
        
        # 2. Obter o nome da feature de INTERA√á√ÉO, padronizando o espa√ßo para underscore.
        feature_name = coluna_sabor_min.replace(' ', '_') + '_comp'

        # 3. Preparar a entrada de PREVIS√ÉO com as novas features de intera√ß√£o
        entrada_interacao = {}
        
        # Iterar sobre todas as features de treino (ex: 'frango_comp', 'carne_seca_com_cream_cheese_comp')
        for col in x.columns: 
            # 4. Definir a feature de interesse (sabor e comprimento) com o valor do tamanho.
            if col == feature_name:
                entrada_interacao[col] = tamanho
            else:
                # 5. Para todas as outras features de intera√ß√£o (outros sabores), o valor √© zero.
                entrada_interacao[col] = 0

        # 6. Converter para DataFrame na ordem correta das colunas de treino
        entrada_df = pd.DataFrame([entrada_interacao], columns=x.columns)

        try:
            # Fazer a previs√£o
            preco_previsto = modelo.predict(entrada_df)[0]
            
            # Garantir que o pre√ßo n√£o √© negativo
            preco_previsto = max(0, preco_previsto) 

            st.markdown(
                f"""
                <div style='background-color: #f0f8ff; padding: 20px; border-radius: 10px; text-align: center; border: 1px solid #cceeff;'>
                    <h3 style='color: #007bff;'>Resultado da Previs√£o</h3>
                    <p style='font-size: 1.1em;'>O pre√ßo previsto para um {tipo_lanche_ui} de {tamanho:.0f} cm √©</p>
                    <p style='font-size: 2.5em; font-weight: bold; color: #28a745;'>R$ {preco_previsto:.2f} üí∞</p>
                </div>
                """, 
                unsafe_allow_html=True
            )
        except Exception as e:
            st.error(f"Erro ao fazer a previs√£o: {e}")
    else:
        st.warning("Por favor, insira um comprimento de lanche v√°lido.")

st.divider()
st.caption("Ajuste de Modelo: Usamos termos de intera√ß√£o (Sabor x Comprimento) e for√ßamos o modelo a n√£o ter intercepto para garantir uma proporcionalidade perfeita.")
